<root><simulation><result_generated_time />2023-05-12 16:49:50<layer><layer_spec />{'B': 1, 'K': 160, 'C': 960, 'OY': 7, 'OX': 7, 'IY': 7, 'IX': 7, 'FY': 1, 'FX': 1, 'SY': 1, 'SX': 1, 'SFY': 1, 'SFX': 1, 'G': 1}<im2col_enable />False<total_MAC_operation />7526400<total_data_size_element />{'W': 153600, 'I': 47040, 'O': 7840}<total_data_reuse />{'W': 49, 'I': 160.0, 'O': 960}</layer><search_engine><mem_hierarchy_search><mode />fixed<mem_scheme_index />1/1</mem_hierarchy_search><spatial_mapping_search><mode />heuristic search v2<spatial_utilization_threshold />0.0<unrolling_scheme_index />25/28</spatial_mapping_search><temporal_mapping_search><mode />loma search<valid_temporal_mapping_found />3360</temporal_mapping_search></search_engine><hw_spec><PE_array><precision_bit />{'W': 8, 'I': 8, 'O_partial': 8, 'O_final': 8}<MAC_array_size />{'Col': 32, 'Row': 32}</PE_array><memory_hierarchy><mem_name_in_the_hierarchy><W />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<I />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<O />['spad_32byte', 'buffer_2Mbyte', 'sram_big']</mem_name_in_the_hierarchy><mem_size_bit />{'W': [512, 33554432, 34359738368], 'I': [512, 33554432, 34359738368], 'O': [512, 33554432, 34359738368]}<mem_bw_bit_per_cycle_or_mem_wordlength />{'W': [[64, 64], [512, 512], [2048, 2048]], 'I': [[64, 64], [512, 512], [2048, 2048]], 'O': [[64, 64], [512, 512], [2048, 2048]]}<mem_access_energy_per_word />{'W': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'I': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'O': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]]}<mem_type />{'W': ['dp_sb', 'dp_db', 'dp_sb'], 'I': ['dp_sb', 'dp_db', 'dp_sb'], 'O': ['dp_sb', 'dp_db', 'dp_sb']}<mem_share />{0: [('W', 'buffer_2Mbyte'), ('I', 'buffer_2Mbyte'), ('O', 'buffer_2Mbyte')], 1: [('W', 'sram_big'), ('I', 'sram_big'), ('O', 'sram_big')]}<mem_area_single_module />{'W': [0.000693826, 27.0113, 93.2871], 'I': [0.000693826, 27.0113, 93.2871], 'O': [0.000693826, 27.0113, 93.2871]}<mem_unroll />{'W': [120, 1, 1], 'I': [840, 1, 1], 'O': [7, 1, 1]}</memory_hierarchy></hw_spec><results><basic_info><spatial_unrolling><W />[[[('OY', 7)], []], [[('C', 4)], [('C', 30)]], [], []]<I />[[], [[('OY', 7), ('C', 4)], [('C', 30)]], [], []]<O />[[[('C', 4)], [('C', 30)]], [[('OY', 7)], []], [], []]<greedy_mapping />False</spatial_unrolling><temporal_mapping><W />[[('K', 2), ('K', 4), ('OX', 7), ('C', 2), ('C', 4)], [('K', 20)], []]<I />[[('K', 2), ('K', 4), ('OX', 7), ('C', 2), ('C', 4), ('K', 20)], [], []]<O />[[('K', 2), ('K', 4), ('OX', 7), ('C', 2), ('C', 4)], [('K', 20)], []]<fully_PE_level_output_stationary />True</temporal_mapping><data_reuse />{'W': [7.0, 7, 1, 1], 'I': [1.0, 160.0, 1.0, 1.0], 'O': [120.0, 8, 1, 1]}<I_pr_diagonally_broadcast_or_fifo_effect />'I': [False, False, False, False]<used_mem_size_bit />{'W': [512, 1228800, 1228800], 'I': [448, 376320, 376320], 'O': [448, 62720, 62720], 'O_partial': [448, 0, 0], 'O_final': [0, 62720, 62720]}<actual_mem_utilization_individual />{'W': [1.0, 0.04, 0.0], 'I': [0.88, 0.01, 0.0], 'O': [0.88, 0.0, 0.0]}<actual_mem_utilization_shared />{'W': [1.0, 0.05, 0.0], 'I': [0.88, 0.05, 0.0], 'O': [0.88, 0.05, 0.0]}<effective_mem_size_bit />{'W': [256, 61440, 1228800], 'I': [448, 376320, 376320], 'O': [448, 3136, 62720], 'O_partial': [448, 0, 0], 'O_final': [0, 3136, 62720]}<total_unit_count />{'W': [840, 120, 1, 1], 'I': [840, 840, 1, 1], 'O': [840, 7, 1, 1]}<unique_unit_count />{'W': [120, 120, 1, 1], 'I': [840, 840, 1, 1], 'O': [7, 7, 1, 1]}<duplicate_unit_count />{'W': [7.0, 1.0, 1.0, 1.0], 'I': [1.0, 1.0, 1.0, 1.0], 'O': [120.0, 1.0, 1.0, 1.0]}<mem_access_count_elem><W />[[1075200, 153600], [153600, 153600], [153600, 0]]<I />[[940800, 47040], [47040, 47040], [47040, 0]]<O />[[(54880, 62720), (7840, 0)], [(0, 7840), (7840, 0)], [(0, 7840), (0, 0)]]<O_partial />[[(54880, 62720), (0, 0)], [(0, 0), (0, 0)], [(0, 0), (0, 0)]]<O_final />[[(0, 0), (7840, 0)], [(0, 7840), (7840, 0)], [(0, 7840), (0, 0)]]</mem_access_count_elem><mem_access_count_word><W />[[134400, 19200], [2400, 2400], [600, 0]]<I />[[117600, 5880], [735, 735], [184, 0]]<O />[[(6860, 7840), (980, 0)], [(0, 122), (122, 0)], [(0, 31), (0, 0)]]<O_partial />[([6860, 7840], [0, 0]), ([0, 0], [0, 0]), ([0, 0], [0, 0])]<O_final />[([0, 0], [980, 0]), ([0, 122], [122, 0]), ([0, 31], [0, 0])]</mem_access_count_word><mac_count><active />7526400<idle />1648640</mac_count></basic_info><energy><total_energy />16536971.9<mem_energy_breakdown><W />[52.2, 475.6, 799.1]<I />[41.7, 145.7, 244.7]<O />[5.5, 24.3, 40.8]</mem_energy_breakdown><MAC_energy><active_MAC />16452710.4<idle_MAC />82432.0<total />16535142.4</MAC_energy></energy><performance><mac_array_utilization><utilization_with_data_loading />0.6017<utilization_without_data_loading />0.8203<utilization_spatial />0.8203<utilization_temporal_with_data_loading />0.7335<mac_utilize_temporal_without_data_loading />1.0</mac_array_utilization><latency><latency_cycle_with_data_loading />12215<latency_cycle_without_data_loading />8960<ideal_computing_cycle />8960<data_loading><load_cycle_total />3255<load_cycle_individual />{'W': [120, 2400, 0], 'I': [735, 735, 0]}<load_cycle_combined />{'W': 2400, 'I': 736}</data_loading><mem_stalling><mem_stall_cycle_total />0<mem_stall_cycle_individual />{'W': [[-8959], [-8360, -6232], [-8960, -8960]], 'I': [[-8959], [-448, -8960], [-8960, -8960]], 'O': [[-8960], [-980, -1000], [-8838, -8929]]}<mem_stall_cycle_shared />{'W': [[-8959], [-8360, 0], [0, 0]], 'I': [[-8959], [-448, 0], [0, 0]], 'O': [[-8960], [-980, -1000], [-8838, -8929]]}<latency_deep_analysis><data_size_each_level_unrolled />{'W': [512, 1228800, 1228800], 'I': [448, 376320, 376320], 'O': [448, 62720, 62720], 'O_partial': [448, 0, 0], 'O_final': [0, 62720, 62720]}<data_size_each_level_total />{'W': [61440, 1228800, 1228800], 'I': [376320, 376320, 376320], 'O': [3136, 62720, 62720]}<loop_cycles_each_level />{'W': [448, 8960, 8960], 'I': [8960, 8960, 8960], 'O': [448, 8960, 8960]}<top_ir_loop_size />{'W': [1, 1, 1], 'I': [20, 1, 1], 'O': [8, 1, 1]}<req_aver_mem_bw />{'W': [[8.0, 1.1], [137.1, 137.1], [137.1, 137.1]], 'I': [[8.0, 0.1], [42.0, 42.0], [42.0, 42.0]], 'O': [[8.0, 1.0], [7.0, 7.0], [7.0, 7.0]]}<req_inst_mem_bw />{'W': [[8.0, 1.1], [137.1, 137.1], [137.1, 137.1]], 'I': [[8.0, 1.0], [840.0, 42.0], [42.0, 42.0]], 'O': [[8.0, 8.0], [56.0, 7.0], [7.0, 7.0]]}<req_mem_bw_bit_per_cycle_individual />{'W': [[8.0, 1.1], [137.1, 137.1], [137.1, 0]], 'I': [[8.0, 1.0], [840.0, 42.0], [42.0, 0]], 'O': [[8.0, 8.0], [56.0, 7.0], [7.0, 0]]}<req_mem_bw_bit_per_cycle_shared />{'W': [[8.0, 1.1], [984.1, 235.1], [179.1, 7.0]], 'I': [[8.0, 1.0], [984.1, 235.1], [179.1, 7.0]], 'O': [[8.0, 8.0], [984.1, 235.1], [179.1, 7.0]]}<output_distinguish />[('psum', 'fsum'), ('fsum', 'fsum'), ('fsum', 'fsum')]<mem_bw_requirement_meet />{'W': [[True, True], [False, True], [True, True]], 'I': [[True, True], [False, True], [True, True]], 'O': [[True, True], [False, True], [True, True]]}<trans_time_ideal />{'W': [[1, 1, 8960], [448, 448, 20], [8960, 8960, 1]], 'I': [[1, 1, 8960], [448, 8960, 1], [8960, 8960, 1]], 'O': [[1, 1, 8960], [56, 448, 20], [8960, 8960, 1]]}<trans_time_real />{'W': [[0, 1, 8960], [[8, 448, 20], [120, 448, 20]], [[2400, 8960, 1], [600, 8960, 1]]], 'I': [[0, 1, 8960], [[7, 8960, 1], [735, 8960, 1]], [[735, 8960, 1], [184, 8960, 1]]], 'O': [[0, 1, 8960], [[7, 448, 20], [6, 448, 20]], [[122, 8960, 1], [31, 8960, 1]]]}<single_stall_cycle />{'W': [[-1], [-440, -328], [-6560, -8360]], 'I': [[-1], [-441, 287], [-8225, -8776]], 'O': [[-1], [-49, -50], [-8838, -8929]]}<single_stall_count />{'W': [8959, 19, 0], 'I': [8959, 0, 0], 'O': [8960, 20, 1]}<mem_compute_overlap_cc_for_shared_mem />{0: {'W': [2280, 0], 'I': [0, 0], 'O': [140, 122]}, 1: {'W': [0, 0], 'I': [0, 0], 'O': [122, 0]}}<mem_compute_overlap_stall_for_shared_mem_LH />{0: [[-6680, -8960], [-8820, -8838]], 1: [[-8960, -8960], [-8838, -8960]]}</latency_deep_analysis></mem_stalling></latency></performance><area><total_area />121.1<mem_area />121.0<mem_area_percentage />99.9 %</area></results><elapsed_time_second />0</simulation></root>