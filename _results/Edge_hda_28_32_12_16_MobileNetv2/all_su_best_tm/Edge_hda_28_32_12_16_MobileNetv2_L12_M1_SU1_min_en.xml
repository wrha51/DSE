<root><simulation><result_generated_time />2023-05-24 01:25:21<layer><layer_spec />{'B': 1, 'K': 32, 'C': 144, 'OY': 28, 'OX': 28, 'IY': 28, 'IX': 28, 'FY': 1, 'FX': 1, 'SY': 1, 'SX': 1, 'SFY': 1, 'SFX': 1, 'G': 1}<im2col_enable />False<total_MAC_operation />3612672<total_data_size_element />{'W': 4608, 'I': 112896, 'O': 25088}<total_data_reuse />{'W': 784, 'I': 32.0, 'O': 144}</layer><search_engine><mem_hierarchy_search><mode />fixed<mem_scheme_index />1/1</mem_hierarchy_search><spatial_mapping_search><mode />greedy mapping with hint<spatial_utilization_threshold />0.0<unrolling_scheme_index />1/2</spatial_mapping_search><temporal_mapping_search><mode />loma search<valid_temporal_mapping_found />1680</temporal_mapping_search></search_engine><hw_spec><PE_array><precision_bit />{'W': 8, 'I': 8, 'O_partial': 8, 'O_final': 8}<MAC_array_size />{'Col': 28, 'Row': 32}</PE_array><memory_hierarchy><mem_name_in_the_hierarchy><W />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<I />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<O />['spad_32byte', 'buffer_2Mbyte', 'sram_big']</mem_name_in_the_hierarchy><mem_size_bit />{'W': [512, 25165824, 34359738368], 'I': [512, 25165824, 34359738368], 'O': [512, 25165824, 34359738368]}<mem_bw_bit_per_cycle_or_mem_wordlength />{'W': [[64, 64], [384, 384], [2048, 2048]], 'I': [[64, 64], [384, 384], [2048, 2048]], 'O': [[64, 64], [384, 384], [2048, 2048]]}<mem_access_energy_per_word />{'W': [[0.000336027, 0.000364555], [0.07895925, 0.0696813], [1.33185, 1.33185]], 'I': [[0.000336027, 0.000364555], [0.07895925, 0.0696813], [1.33185, 1.33185]], 'O': [[0.000336027, 0.000364555], [0.07895925, 0.0696813], [1.33185, 1.33185]]}<mem_type />{'W': ['dp_sb', 'dp_db', 'dp_sb'], 'I': ['dp_sb', 'dp_db', 'dp_sb'], 'O': ['dp_sb', 'dp_db', 'dp_sb']}<mem_share />{0: [('W', 'sram_big'), ('I', 'sram_big'), ('O', 'sram_big')], 1: [('W', 'buffer_2Mbyte'), ('I', 'buffer_2Mbyte'), ('O', 'buffer_2Mbyte')]}<mem_area_single_module />{'W': [0.000693826, 20.258474999999997, 93.2871], 'I': [0.000693826, 20.258474999999997, 93.2871], 'O': [0.000693826, 20.258474999999997, 93.2871]}<mem_unroll />{'W': [1, 1, 1], 'I': [896, 1, 1], 'O': [896, 1, 1]}</memory_hierarchy></hw_spec><results><basic_info><spatial_unrolling><W />[[[('OX', 28)], [('OY', 32)]], [], [], []]<I />[[], [[('OX', 28)], [('OY', 32)]], [], []]<O />[[], [[('OX', 28)], [('OY', 32)]], [], []]<greedy_mapping />True<footer_info />{'B': 0, 'K': 0, 'C': 0, 'OY': 28, 'OX': 0, 'FY': 0, 'FX': 0}</spatial_unrolling><temporal_mapping><W />[[('K', 2), ('K', 16)], [('C', 144)], []]<I />[[('K', 2), ('K', 16)], [('C', 144)], []]<O />[[('K', 2), ('K', 16), ('C', 144)], [], []]<fully_PE_level_output_stationary />True</temporal_mapping><data_reuse />{'W': [784.0, 1, 1, 1], 'I': [1.0, 32.0, 1.0, 1.0], 'O': [1.0, 144, 1, 1]}<I_pr_diagonally_broadcast_or_fifo_effect />'I': [False, False, False, False]<used_mem_size_bit />{'W': [256, 36864, 36864], 'I': [8, 903168, 903168], 'O': [256, 200704, 200704], 'O_partial': [256, 0, 0], 'O_final': [0, 200704, 200704]}<actual_mem_utilization_individual />{'W': [0.5, 0.0, 0.0], 'I': [0.02, 0.04, 0.0], 'O': [0.5, 0.01, 0.0]}<actual_mem_utilization_shared />{'W': [0.5, 0.05, 0.0], 'I': [0.02, 0.05, 0.0], 'O': [0.5, 0.05, 0.0]}<effective_mem_size_bit />{'W': [128, 256, 36864], 'I': [8, 6272, 903168], 'O': [256, 200704, 200704], 'O_partial': [256, 0, 0], 'O_final': [0, 200704, 200704]}<total_unit_count />{'W': [896, 1, 1, 1], 'I': [896, 896, 1, 1], 'O': [896, 896, 1, 1]}<unique_unit_count />{'W': [1, 1, 1, 1], 'I': [896, 896, 1, 1], 'O': [896, 896, 1, 1]}<duplicate_unit_count />{'W': [896.0, 1.0, 1.0, 1.0], 'I': [1.0, 1.0, 1.0, 1.0], 'O': [1.0, 1.0, 1.0, 1.0]}<mem_access_count_elem><W />[[4608, 4608], [4608, 4608], [4608, 0]]<I />[[112896, 112896], [129024, 112896], [112896, 0]]<O />[[(3587584, 3612672), (25088, 0)], [(0, 28672), (25088, 0)], [(0, 25088), (0, 0)]]<O_partial />[[(3587584, 3612672), (0, 0)], [(0, 0), (0, 0)], [(0, 0), (0, 0)]]<O_final />[[(0, 0), (25088, 0)], [(0, 28672), (25088, 0)], [(0, 25088), (0, 0)]]</mem_access_count_elem><mem_access_count_word><W />[[576, 576], [96, 96], [18, 0]]<I />[[14112, 14112], [2688, 2352], [441, 0]]<O />[[(448448, 451584), (3136, 0)], [(0, 597), (523, 0)], [(0, 98), (0, 0)]]<O_partial />[([448448, 451584], [0, 0]), ([0, 0], [0, 0]), ([0, 0], [0, 0])]<O_final />[([0, 0], [3136, 0]), ([0, 597], [523, 0]), ([0, 98], [0, 0])]</mem_access_count_word><mac_count><active />3612672<idle />516096</mac_count></basic_info><energy><total_energy />7924647.6<mem_energy_breakdown><W />[0.4, 14.3, 24.0]<I />[9.9, 376.1, 587.3]<O />[316.4, 82.9, 130.5]</mem_energy_breakdown><MAC_energy><active_MAC />7897301.0<idle_MAC />25804.8<total />7923105.8</MAC_energy></energy><performance><mac_array_utilization><utilization_with_data_loading />0.5452<utilization_without_data_loading />0.875<utilization_spatial />0.875<utilization_temporal_with_data_loading />0.623<mac_utilize_temporal_without_data_loading />1.0</mac_array_utilization><latency><latency_cycle_with_data_loading />7396<latency_cycle_without_data_loading />4608<ideal_computing_cycle />4608<data_loading><load_cycle_total />2788<load_cycle_individual />{'W': [4, 96, 0], 'I': [19, 2688, 0]}<load_cycle_combined />{'W': 96, 'I': 2688}</data_loading><mem_stalling><mem_stall_cycle_total />0<mem_stall_cycle_individual />{'W': [[-4607], [-4004, -4433], [-4608, -4608]], 'I': [[-4607], [-4576, -1859], [-4608, -4608]], 'O': [[-4608], [-4604, -4011], [-4011, -4496]]}<mem_stall_cycle_shared />{'W': [[-4607], [-4004, 0], [0, 0]], 'I': [[-4607], [-4576, 0], [0, 0]], 'O': [[-4608], [-4604, -4011], [-4011, -4496]]}<latency_deep_analysis><data_size_each_level_unrolled />{'W': [256, 36864, 36864], 'I': [8, 903168, 903168], 'O': [256, 200704, 200704], 'O_partial': [256, 0, 0], 'O_final': [0, 200704, 200704]}<data_size_each_level_total />{'W': [256, 36864, 36864], 'I': [7168, 903168, 903168], 'O': [229376, 200704, 200704]}<loop_cycles_each_level />{'W': [32, 4608, 4608], 'I': [32, 4608, 4608], 'O': [4608, 4608, 4608]}<top_ir_loop_size />{'W': [1, 1, 1], 'I': [32, 1, 1], 'O': [144, 1, 1]}<req_aver_mem_bw />{'W': [[8.0, 8.0], [8.0, 8.0], [8.0, 8.0]], 'I': [[8.0, 0.2], [224.0, 224.0], [224.0, 224.0]], 'O': [[8.0, 0.1], [49.8, 49.8], [49.8, 49.8]]}<req_inst_mem_bw />{'W': [[8.0, 8.0], [8.0, 8.0], [8.0, 8.0]], 'I': [[8.0, 8.0], [7168.0, 224.0], [224.0, 224.0]], 'O': [[8.0, 8.0], [7168.0, 49.8], [49.8, 49.8]]}<req_mem_bw_bit_per_cycle_individual />{'W': [[8.0, 8.0], [8.0, 8.0], [8.0, 0]], 'I': [[8.0, 0.2], [224.0, 224.0], [224.0, 0]], 'O': [[8.0, 0.1], [49.8, 49.8], [49.8, 0]]}<req_mem_bw_bit_per_cycle_shared />{'W': [[8.0, 8.0], [281.8, 281.8], [232.0, 49.8]], 'I': [[8.0, 0.2], [281.8, 281.8], [232.0, 49.8]], 'O': [[8.0, 0.1], [281.8, 281.8], [232.0, 49.8]]}<output_distinguish />[('psum', 'fsum'), ('fsum', 'fsum'), ('fsum', 'fsum')]<mem_bw_requirement_meet />{'W': [[True, True], [True, True], [True, True]], 'I': [[True, True], [True, True], [True, True]], 'O': [[True, True], [True, True], [True, True]]}<trans_time_ideal />{'W': [[1, 1, 4608], [32, 32, 144], [4608, 4608, 1]], 'I': [[1, 1, 4608], [32, 32, 144], [4608, 4608, 1]], 'O': [[1, 1, 4608], [4608, 4608, 1], [4608, 4608, 1]]}<trans_time_real />{'W': [[0, 1, 4608], [[4, 32, 144], [1, 32, 144]], [[96, 4608, 1], [18, 4608, 1]]], 'I': [[0, 1, 4608], [[0, 32, 144], [19, 32, 144]], [[2688, 4608, 1], [504, 4608, 1]]], 'O': [[0, 1, 4608], [[4, 4608, 1], [597, 4608, 1]], [[597, 4608, 1], [112, 4608, 1]]]}<single_stall_cycle />{'W': [[-1], [-28, -31], [-4512, -4590]], 'I': [[-1], [-32, -13], [-1920, -4104]], 'O': [[-1], [-4604, -4011], [-4011, -4496]]}<single_stall_count />{'W': [4607, 143, 0], 'I': [4607, 143, 0], 'O': [4608, 1, 1]}<mem_compute_overlap_cc_for_shared_mem />{0: {'W': [0, 0], 'I': [0, 0], 'O': [597, 0]}, 1: {'W': [572, 0], 'I': [2717, 0], 'O': [597, 597]}}<mem_compute_overlap_stall_for_shared_mem_LH />{0: [[-4608, -4608], [-4011, -4608]], 1: [[-1319, -4608], [-4011, -4011]]}</latency_deep_analysis></mem_stalling></latency></performance><area><total_area />115.0<mem_area />114.8<mem_area_percentage />99.8 %</area></results><elapsed_time_second />0</simulation></root>