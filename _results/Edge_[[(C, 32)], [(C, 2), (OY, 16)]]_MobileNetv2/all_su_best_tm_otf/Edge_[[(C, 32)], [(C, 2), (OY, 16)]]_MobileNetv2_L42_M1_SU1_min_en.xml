<root><simulation><result_generated_time />2023-05-13 01:51:23<layer><layer_spec />{'B': 1, 'K': 160, 'C': 576, 'OY': 7, 'OX': 7, 'IY': 7, 'IX': 7, 'FY': 1, 'FX': 1, 'SY': 1, 'SX': 1, 'SFY': 1, 'SFX': 1, 'G': 1}<im2col_enable />False<total_MAC_operation />4515840<total_data_size_element />{'W': 92160, 'I': 28224, 'O': 7840}<total_data_reuse />{'W': 49, 'I': 160.0, 'O': 576}</layer><search_engine><mem_hierarchy_search><mode />fixed<mem_scheme_index />1/1</mem_hierarchy_search><spatial_mapping_search><mode />hint-driven search<spatial_mapping_hint_list />[[{'Col': ['C_32']}, {'Row': ['C_2', 'OY_16']}]]<unrolling_scheme_index />1/1</spatial_mapping_search><temporal_mapping_search><mode />loma search<valid_temporal_mapping_found />336</temporal_mapping_search></search_engine><hw_spec><PE_array><precision_bit />{'W': 8, 'I': 8, 'O_partial': 8, 'O_final': 8}<MAC_array_size />{'Col': 32, 'Row': 32}</PE_array><memory_hierarchy><mem_name_in_the_hierarchy><W />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<I />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<O />['spad_32byte', 'buffer_2Mbyte', 'sram_big']</mem_name_in_the_hierarchy><mem_size_bit />{'W': [512, 33554432, 34359738368], 'I': [512, 33554432, 34359738368], 'O': [512, 33554432, 34359738368]}<mem_bw_bit_per_cycle_or_mem_wordlength />{'W': [[64, 64], [512, 512], [2048, 2048]], 'I': [[64, 64], [512, 512], [2048, 2048]], 'O': [[64, 64], [512, 512], [2048, 2048]]}<mem_access_energy_per_word />{'W': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'I': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'O': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]]}<mem_type />{'W': ['dp_sb', 'dp_db', 'dp_sb'], 'I': ['dp_sb', 'dp_db', 'dp_sb'], 'O': ['dp_sb', 'dp_db', 'dp_sb']}<mem_share />{0: [('W', 'sram_big'), ('I', 'sram_big'), ('O', 'sram_big')], 1: [('W', 'buffer_2Mbyte'), ('I', 'buffer_2Mbyte'), ('O', 'buffer_2Mbyte')]}<mem_area_single_module />{'W': [0.000693826, 27.0113, 93.2871], 'I': [0.000693826, 27.0113, 93.2871], 'O': [0.000693826, 27.0113, 93.2871]}<mem_unroll />{'W': [128, 1, 1], 'I': [896, 1, 1], 'O': [7, 1, 1]}</memory_hierarchy></hw_spec><results><basic_info><spatial_unrolling><W />[[[], [('OY', 7)]], [[('C', 32)], [('C', 4)]], [], []]<I />[[], [[('C', 32)], [('C', 4), ('OY', 7)]], [], []]<O />[[[('C', 32)], [('C', 4)]], [[], [('OY', 7)]], [], []]<greedy_mapping />False</spatial_unrolling><temporal_mapping><W />[[('K', 10), ('C', 5), ('OX', 7)], [('K', 2), ('K', 8)], []]<I />[[('K', 10), ('C', 5), ('OX', 7), ('K', 2), ('K', 8)], [], []]<O />[[('K', 10), ('C', 5)], [('OX', 7), ('K', 2), ('K', 8)], []]<fully_PE_level_output_stationary />True</temporal_mapping><data_reuse />{'W': [7.0, 7, 1, 1], 'I': [1.0, 160.0, 1.0, 1.0], 'O': [128.0, 5, 1, 1]}<I_pr_diagonally_broadcast_or_fifo_effect />'I': [False, False, False, False]<used_mem_size_bit />{'W': [400, 819200, 819200], 'I': [280, 250880, 250880], 'O': [80, 62720, 62720], 'O_partial': [80, 0, 0], 'O_final': [0, 62720, 62720]}<actual_mem_utilization_individual />{'W': [0.78, 0.02, 0.0], 'I': [0.55, 0.01, 0.0], 'O': [0.16, 0.0, 0.0]}<actual_mem_utilization_shared />{'W': [0.78, 0.03, 0.0], 'I': [0.55, 0.03, 0.0], 'O': [0.16, 0.03, 0.0]}<effective_mem_size_bit />{'W': [400, 409600, 819200], 'I': [280, 250880, 250880], 'O': [80, 8960, 62720], 'O_partial': [80, 0, 0], 'O_final': [0, 8960, 62720]}<total_unit_count />{'W': [896, 128, 1, 1], 'I': [896, 896, 1, 1], 'O': [896, 7, 1, 1]}<unique_unit_count />{'W': [128, 128, 1, 1], 'I': [896, 896, 1, 1], 'O': [7, 7, 1, 1]}<duplicate_unit_count />{'W': [7.0, 1.0, 1.0, 1.0], 'I': [1.0, 1.0, 1.0, 1.0], 'O': [128.0, 1.0, 1.0, 1.0]}<mem_access_count_elem><W />[[645120, 92160], [92160, 92160], [92160, 0]]<I />[[451584, 28224], [28224, 28224], [28224, 0]]<O />[[(31360, 39200), (7840, 0)], [(0, 7840), (7840, 0)], [(0, 7840), (0, 0)]]<O_partial />[[(31360, 39200), (0, 0)], [(0, 0), (0, 0)], [(0, 0), (0, 0)]]<O_final />[[(0, 0), (7840, 0)], [(0, 7840), (7840, 0)], [(0, 7840), (0, 0)]]</mem_access_count_elem><mem_access_count_word><W />[[80640, 11520], [1440, 1440], [360, 0]]<I />[[56448, 3528], [441, 441], [110, 0]]<O />[[(3920, 4900), (980, 0)], [(0, 122), (122, 0)], [(0, 31), (0, 0)]]<O_partial />[([3920, 4900], [0, 0]), ([0, 0], [0, 0]), ([0, 0], [0, 0])]<O_final />[([0, 0], [980, 0]), ([0, 122], [122, 0]), ([0, 31], [0, 0])]</mem_access_count_word><mac_count><active />4515840<idle />645120</mac_count></basic_info><energy><total_energy />9905001.4<mem_energy_breakdown><W />[31.3, 285.4, 479.5]<I />[20.3, 87.4, 146.8]<O />[3.4, 24.3, 40.8]</mem_energy_breakdown><MAC_energy><active_MAC />9871626.2<idle_MAC />32256.0<total />9903882.2</MAC_energy></energy><performance><mac_array_utilization><utilization_with_data_loading />0.5738<utilization_without_data_loading />0.7717<utilization_spatial />0.875<utilization_temporal_with_data_loading />0.6557<mac_utilize_temporal_without_data_loading />0.8819</mac_array_utilization><latency><latency_cycle_with_data_loading />8540<latency_cycle_without_data_loading />6350<ideal_computing_cycle />5600<data_loading><load_cycle_total />2190<load_cycle_individual />{'W': [100, 1600, 0], 'I': [490, 490, 0]}<load_cycle_combined />{'W': 1600, 'I': 491}</data_loading><mem_stalling><mem_stall_cycle_total />750<mem_stall_cycle_individual />{'W': [[-5599], [-660, 750], [-5600, -5600]], 'I': [[-5599], [-350, -5600], [-5600, -5600]], 'O': [[-5600], [-5488, -5488], [-5478, -5569]]}<mem_stall_cycle_shared />{'W': [[-5599], [-660, 750], [0, 0]], 'I': [[-5599], [-350, 750], [0, 0]], 'O': [[-5600], [-5488, -5488], [-5478, -5569]]}<latency_deep_analysis><data_size_each_level_unrolled />{'W': [400, 819200, 819200], 'I': [280, 250880, 250880], 'O': [80, 62720, 62720], 'O_partial': [80, 0, 0], 'O_final': [0, 62720, 62720]}<data_size_each_level_total />{'W': [51200, 819200, 819200], 'I': [250880, 250880, 250880], 'O': [560, 62720, 62720]}<loop_cycles_each_level />{'W': [350, 5600, 5600], 'I': [5600, 5600, 5600], 'O': [50, 5600, 5600]}<top_ir_loop_size />{'W': [7, 1, 1], 'I': [16, 1, 1], 'O': [5, 1, 1]}<req_aver_mem_bw />{'W': [[8.0, 1.1], [146.3, 146.3], [146.3, 146.3]], 'I': [[8.0, 0.1], [44.8, 44.8], [44.8, 44.8]], 'O': [[8.0, 1.6], [11.2, 11.2], [11.2, 11.2]]}<req_inst_mem_bw />{'W': [[8.0, 8.0], [1024.0, 146.3], [146.3, 146.3]], 'I': [[8.0, 0.8], [716.8, 44.8], [44.8, 44.8]], 'O': [[8.0, 8.0], [56.0, 11.2], [11.2, 11.2]]}<req_mem_bw_bit_per_cycle_individual />{'W': [[8.0, 8.0], [1024.0, 146.3], [146.3, 0]], 'I': [[8.0, 0.8], [716.8, 44.8], [44.8, 0]], 'O': [[8.0, 1.6], [11.2, 11.2], [11.2, 0]]}<req_mem_bw_bit_per_cycle_shared />{'W': [[8.0, 8.0], [1752.0, 202.3], [191.1, 11.2]], 'I': [[8.0, 0.8], [1752.0, 202.3], [191.1, 11.2]], 'O': [[8.0, 1.6], [1752.0, 202.3], [191.1, 11.2]]}<output_distinguish />[('psum', 'fsum'), ('fsum', 'fsum'), ('fsum', 'fsum')]<mem_bw_requirement_meet />{'W': [[True, True], [False, True], [True, True]], 'I': [[True, True], [False, True], [True, True]], 'O': [[True, True], [False, True], [True, True]]}<trans_time_ideal />{'W': [[1, 1, 5600], [50, 350, 16], [5600, 5600, 1]], 'I': [[1, 1, 5600], [350, 5600, 1], [5600, 5600, 1]], 'O': [[1, 1, 5600], [50, 50, 112], [5600, 5600, 1]]}<trans_time_real />{'W': [[0, 1, 5600], [[6, 350, 16], [100, 350, 16]], [[1600, 5600, 1], [400, 5600, 1]]], 'I': [[0, 1, 5600], [[4, 5600, 1], [490, 5600, 1]], [[490, 5600, 1], [122, 5600, 1]]], 'O': [[0, 1, 5600], [[1, 50, 112], [1, 50, 112]], [[122, 5600, 1], [31, 5600, 1]]]}<single_stall_cycle />{'W': [[-1], [-44, 50], [-4000, -5200]], 'I': [[-1], [-346, 140], [-5110, -5478]], 'O': [[-1], [-49, -49], [-5478, -5569]]}<single_stall_count />{'W': [5599, 15, 0], 'I': [5599, 0, 0], 'O': [5600, 112, 1]}<mem_compute_overlap_cc_for_shared_mem />{0: {'W': [0, 0], 'I': [0, 0], 'O': [122, 0]}, 1: {'W': [750, 0], 'I': [0, 0], 'O': [112, 122]}}<mem_compute_overlap_stall_for_shared_mem_LH />{0: [[-5600, -5600], [-5478, -5600]], 1: [[-4850, -5600], [-5488, -5478]]}</latency_deep_analysis></mem_stalling></latency></performance><area><total_area />121.1<mem_area />121.0<mem_area_percentage />99.9 %</area></results><elapsed_time_second />0</simulation></root>