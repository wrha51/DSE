<root><simulation><result_generated_time />2023-05-17 18:42:07<layer><layer_spec />{'B': 1, 'K': 24, 'C': 1024, 'OY': 10, 'OX': 10, 'IY': 10, 'IX': 10, 'FY': 1, 'FX': 1, 'SY': 1, 'SX': 1, 'SFY': 1, 'SFX': 1, 'G': 1}<im2col_enable />False<total_MAC_operation />2457600<total_data_size_element />{'W': 24576, 'I': 102400, 'O': 2400}<total_data_reuse />{'W': 100, 'I': 24.0, 'O': 1024}</layer><search_engine><mem_hierarchy_search><mode />fixed<mem_scheme_index />1/1</mem_hierarchy_search><spatial_mapping_search><mode />hint-driven search<spatial_mapping_hint_list />[[{'Col': ['K_32']}, {'Row': ['C_16', 'K_2']}]]<unrolling_scheme_index />1/1</spatial_mapping_search><temporal_mapping_search><mode />loma search<valid_temporal_mapping_found />10080</temporal_mapping_search></search_engine><hw_spec><PE_array><precision_bit />{'W': 8, 'I': 8, 'O_partial': 8, 'O_final': 8}<MAC_array_size />{'Col': 32, 'Row': 32}</PE_array><memory_hierarchy><mem_name_in_the_hierarchy><W />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<I />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<O />['spad_32byte', 'buffer_2Mbyte', 'sram_big']</mem_name_in_the_hierarchy><mem_size_bit />{'W': [512, 33554432, 34359738368], 'I': [512, 33554432, 34359738368], 'O': [512, 33554432, 34359738368]}<mem_bw_bit_per_cycle_or_mem_wordlength />{'W': [[64, 64], [512, 512], [2048, 2048]], 'I': [[64, 64], [512, 512], [2048, 2048]], 'O': [[64, 64], [512, 512], [2048, 2048]]}<mem_access_energy_per_word />{'W': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'I': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'O': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]]}<mem_type />{'W': ['dp_sb', 'dp_db', 'dp_sb'], 'I': ['dp_sb', 'dp_db', 'dp_sb'], 'O': ['dp_sb', 'dp_db', 'dp_sb']}<mem_share />{0: [('W', 'sram_big'), ('I', 'sram_big'), ('O', 'sram_big')], 1: [('W', 'buffer_2Mbyte'), ('I', 'buffer_2Mbyte'), ('O', 'buffer_2Mbyte')]}<mem_area_single_module />{'W': [0.000693826, 27.0113, 93.2871], 'I': [0.000693826, 27.0113, 93.2871], 'O': [0.000693826, 27.0113, 93.2871]}<mem_unroll />{'W': [768, 1, 1], 'I': [16, 1, 1], 'O': [48, 1, 1]}</memory_hierarchy></hw_spec><results><basic_info><spatial_unrolling><W />[[], [[('K', 24)], [('C', 16), ('K', 2)]], [], []]<I />[[[('K', 24)], [('K', 2)]], [[], [('C', 16)]], [], []]<O />[[[], [('C', 16)]], [[('K', 24)], [('K', 2)]], [], []]<greedy_mapping />False</spatial_unrolling><temporal_mapping><W />[[('OX', 2), ('OX', 5), ('OY', 10)], [('C', 64)], []]<I />[[], [('OX', 2), ('OX', 5), ('OY', 10), ('C', 64)], []]<O />[[], [('OX', 2), ('OX', 5), ('OY', 10), ('C', 64)], []]<fully_PE_level_output_stationary />False</temporal_mapping><data_reuse />{'W': [1.0, 100, 1, 1], 'I': [48.0, 1.0, 1.0, 1.0], 'O': [16.0, 1, 64, 1]}<I_pr_diagonally_broadcast_or_fifo_effect />'I': [False, False, False, False]<used_mem_size_bit />{'W': [8, 393216, 393216], 'I': [8, 819200, 819200], 'O': [8, 38400, 38400], 'O_partial': [8, 38400, 0], 'O_final': [0, 0, 38400]}<actual_mem_utilization_individual />{'W': [0.02, 0.01, 0.0], 'I': [0.02, 0.02, 0.0], 'O': [0.02, 0.0, 0.0]}<actual_mem_utilization_shared />{'W': [0.02, 0.04, 0.0], 'I': [0.02, 0.04, 0.0], 'O': [0.02, 0.04, 0.0]}<effective_mem_size_bit />{'W': [8, 6144, 393216], 'I': [8, 12800, 819200], 'O': [8, 38400, 38400], 'O_partial': [8, 38400, 0], 'O_final': [0, 0, 38400]}<total_unit_count />{'W': [768, 768, 1, 1], 'I': [768, 16, 1, 1], 'O': [768, 48, 1, 1]}<unique_unit_count />{'W': [768, 768, 1, 1], 'I': [16, 16, 1, 1], 'O': [48, 48, 1, 1]}<duplicate_unit_count />{'W': [1.0, 1.0, 1.0, 1.0], 'I': [48.0, 1.0, 1.0, 1.0], 'O': [16.0, 1.0, 1.0, 1.0]}<mem_access_count_elem><W />[[24576, 24576], [24576, 24576], [24576, 0]]<I />[[102400, 102400], [102400, 102400], [102400, 0]]<O />[[(151200, 153600), (153600, 151200)], [(151200, 153600), (2400, 0)], [(0, 2400), (0, 0)]]<O_partial />[[(151200, 153600), (153600, 151200)], [(151200, 153600), (0, 0)], [(0, 0), (0, 0)]]<O_final />[[(0, 0), (0, 0)], [(0, 0), (2400, 0)], [(0, 2400), (0, 0)]]</mem_access_count_elem><mem_access_count_word><W />[[3072, 3072], [384, 384], [96, 0]]<I />[[12800, 12800], [1600, 1600], [400, 0]]<O />[[(18900, 19200), (19200, 18900)], [(2362, 2400), (38, 0)], [(0, 9), (0, 0)]]<O_partial />[([18900, 19200], [19200, 18900]), ([2362, 2400], [0, 0]), ([0, 0], [0, 0])]<O_final />[([0, 0], [0, 0]), ([0, 0], [38, 0]), ([0, 9], [0, 0])]</mem_access_count_word><mac_count><active />2457600<idle />819200</mac_count></basic_info><energy><total_energy />5414853.3<mem_energy_breakdown><W />[2.2, 76.1, 127.9]<I />[9.0, 317.1, 532.7]<O />[26.7, 475.6, 12.5]</mem_energy_breakdown><MAC_energy><active_MAC />5372313.6<idle_MAC />40960.0<total />5413273.6</MAC_energy></energy><performance><mac_array_utilization><utilization_with_data_loading />0.5039<utilization_without_data_loading />0.6708<utilization_spatial />0.75<utilization_temporal_with_data_loading />0.6719<mac_utilize_temporal_without_data_loading />0.8944</mac_array_utilization><latency><latency_cycle_with_data_loading />9525<latency_cycle_without_data_loading />7156<ideal_computing_cycle />6400<data_loading><load_cycle_total />2369<load_cycle_individual />{'W': [12, 768, 0], 'I': [1, 1600, 0]}<load_cycle_combined />{'W': 768, 'I': 1600}</data_loading><mem_stalling><mem_stall_cycle_total />756<mem_stall_cycle_individual />{'W': [[-6399], [-6300, -5544], [-6400, -6400]], 'I': [[-6399], [-6399, -6399], [-6400, -6400]], 'O': [[-6400], [-6400, 0], [-6325, -6381]]}<mem_stall_cycle_shared />{'W': [[-6399], [-6300, 756], [0, 0]], 'I': [[-6399], [-6399, 756], [0, 0]], 'O': [[-6400], [-6400, 0], [-6325, -6381]]}<latency_deep_analysis><data_size_each_level_unrolled />{'W': [8, 393216, 393216], 'I': [8, 819200, 819200], 'O': [8, 38400, 38400], 'O_partial': [8, 38400, 0], 'O_final': [0, 0, 38400]}<data_size_each_level_total />{'W': [6144, 393216, 393216], 'I': [128, 819200, 819200], 'O': [384, 38400, 38400]}<loop_cycles_each_level />{'W': [100, 6400, 6400], 'I': [1, 6400, 6400], 'O': [1, 6400, 6400]}<top_ir_loop_size />{'W': [100, 1, 1], 'I': [1, 1, 1], 'O': [1, 64, 1]}<req_aver_mem_bw />{'W': [[8.0, 0.1], [61.4, 61.4], [61.4, 61.4]], 'I': [[8.0, 8.0], [128.0, 128.0], [128.0, 128.0]], 'O': [[8.0, 8.0], [384.0, 6.0], [6.0, 6.0]]}<req_inst_mem_bw />{'W': [[8.0, 8.0], [6144.0, 61.4], [61.4, 61.4]], 'I': [[8.0, 8.0], [128.0, 128.0], [128.0, 128.0]], 'O': [[8.0, 8.0], [384.0, 384.0], [384.0, 6.0]]}<req_mem_bw_bit_per_cycle_individual />{'W': [[8.0, 0.1], [61.4, 61.4], [61.4, 0]], 'I': [[8.0, 8.0], [128.0, 128.0], [128.0, 0]], 'O': [[8.0, 8.0], [384.0, 6.0], [6.0, 0]]}<req_mem_bw_bit_per_cycle_shared />{'W': [[8.0, 0.1], [579.4, 573.4], [189.4, 6.0]], 'I': [[8.0, 8.0], [579.4, 573.4], [189.4, 6.0]], 'O': [[8.0, 8.0], [579.4, 573.4], [189.4, 6.0]]}<output_distinguish />[('psum', 'psum'), ('psum', 'fsum'), ('fsum', 'fsum')]<mem_bw_requirement_meet />{'W': [[True, True], [False, False], [True, True]], 'I': [[True, True], [False, False], [True, True]], 'O': [[True, True], [False, False], [True, True]]}<trans_time_ideal />{'W': [[1, 1, 6400], [100, 100, 64], [6400, 6400, 1]], 'I': [[1, 1, 6400], [1, 1, 6400], [6400, 6400, 1]], 'O': [[1, 1, 6400], [1, 1, 6400], [6400, 6400, 1]]}<trans_time_real />{'W': [[0, 1, 6400], [[0, 100, 64], [12, 100, 64]], [[768, 6400, 1], [192, 6400, 1]]], 'I': [[0, 1, 6400], [[0, 1, 6400], [0, 1, 6400]], [[1600, 6400, 1], [400, 6400, 1]]], 'O': [[0, 1, 6400], [[0, 1, 6400], [1, 1, 6400]], [[75, 6400, 1], [19, 6400, 1]]]}<single_stall_cycle />{'W': [[-1], [-100, -88], [-5632, -6208]], 'I': [[-1], [-1, -1], [-4800, -6000]], 'O': [[-1], [-1, 0], [-6325, -6381]]}<single_stall_count />{'W': [6399, 63, 0], 'I': [6399, 6399, 0], 'O': [6400, 6400, 1]}<mem_compute_overlap_cc_for_shared_mem />{0: {'W': [0, 0], 'I': [0, 0], 'O': [75, 0]}, 1: {'W': [756, 0], 'I': [0, 0], 'O': [6400, 75]}}<mem_compute_overlap_stall_for_shared_mem_LH />{0: [[-6400, -6400], [-6325, -6400]], 1: [[756, -6400], [0, -6325]]}</latency_deep_analysis></mem_stalling></latency></performance><area><total_area />121.1<mem_area />120.9<mem_area_percentage />99.8 %</area></results><elapsed_time_second />1.271</simulation></root>