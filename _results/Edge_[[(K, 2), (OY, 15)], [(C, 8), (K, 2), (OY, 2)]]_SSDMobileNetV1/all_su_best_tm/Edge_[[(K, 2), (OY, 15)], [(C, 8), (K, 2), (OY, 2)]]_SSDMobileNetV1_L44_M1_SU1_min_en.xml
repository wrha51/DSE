<root><simulation><result_generated_time />2023-05-17 19:07:40<layer><layer_spec />{'B': 1, 'K': 546, 'C': 256, 'OY': 2, 'OX': 2, 'IY': 2, 'IX': 2, 'FY': 1, 'FX': 1, 'SY': 1, 'SX': 1, 'SFY': 1, 'SFX': 1, 'G': 1}<im2col_enable />False<total_MAC_operation />559104<total_data_size_element />{'W': 139776, 'I': 1024, 'O': 2184}<total_data_reuse />{'W': 4, 'I': 546.0, 'O': 256}</layer><search_engine><mem_hierarchy_search><mode />fixed<mem_scheme_index />1/1</mem_hierarchy_search><spatial_mapping_search><mode />hint-driven search<spatial_mapping_hint_list />[[{'Col': ['K_2', 'OY_15']}, {'Row': ['C_8', 'K_2', 'OY_2']}]]<unrolling_scheme_index />1/1</spatial_mapping_search><temporal_mapping_search><mode />loma search<valid_temporal_mapping_found />3360</temporal_mapping_search></search_engine><hw_spec><PE_array><precision_bit />{'W': 8, 'I': 8, 'O_partial': 8, 'O_final': 8}<MAC_array_size />{'Col': 32, 'Row': 32}</PE_array><memory_hierarchy><mem_name_in_the_hierarchy><W />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<I />['spad_32byte', 'buffer_2Mbyte', 'sram_big']<O />['spad_32byte', 'buffer_2Mbyte', 'sram_big']</mem_name_in_the_hierarchy><mem_size_bit />{'W': [512, 33554432, 34359738368], 'I': [512, 33554432, 34359738368], 'O': [512, 33554432, 34359738368]}<mem_bw_bit_per_cycle_or_mem_wordlength />{'W': [[64, 64], [512, 512], [2048, 2048]], 'I': [[64, 64], [512, 512], [2048, 2048]], 'O': [[64, 64], [512, 512], [2048, 2048]]}<mem_access_energy_per_word />{'W': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'I': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]], 'O': [[0.000336027, 0.000364555], [0.105279, 0.0929084], [1.33185, 1.33185]]}<mem_type />{'W': ['dp_sb', 'dp_db', 'dp_sb'], 'I': ['dp_sb', 'dp_db', 'dp_sb'], 'O': ['dp_sb', 'dp_db', 'dp_sb']}<mem_share />{0: [('W', 'buffer_2Mbyte'), ('I', 'buffer_2Mbyte'), ('O', 'buffer_2Mbyte')], 1: [('W', 'sram_big'), ('I', 'sram_big'), ('O', 'sram_big')]}<mem_area_single_module />{'W': [0.000693826, 27.0113, 93.2871], 'I': [0.000693826, 27.0113, 93.2871], 'O': [0.000693826, 27.0113, 93.2871]}<mem_unroll />{'W': [224, 1, 1], 'I': [32, 1, 1], 'O': [112, 1, 1]}</memory_hierarchy></hw_spec><results><basic_info><spatial_unrolling><W />[[[('OY', 2)], [('OY', 2)]], [[('K', 14)], [('C', 8), ('K', 2)]], [], []]<I />[[[('K', 14)], [('K', 2)]], [[('OY', 2)], [('C', 8), ('OY', 2)]], [], []]<O />[[[], [('C', 8)]], [[('K', 14), ('OY', 2)], [('K', 2), ('OY', 2)]], [], []]<greedy_mapping />False</spatial_unrolling><temporal_mapping><W />[[('OX', 2), ('C', 2)], [('C', 16), ('K', 20)], []]<I />[[('OX', 2), ('C', 2), ('C', 16), ('K', 20)], [], []]<O />[[('OX', 2), ('C', 2), ('C', 16)], [('K', 20)], []]<fully_PE_level_output_stationary />True</temporal_mapping><data_reuse />{'W': [4.0, 2, 1, 1], 'I': [28.0, 20.0, 1.0, 1.0], 'O': [8.0, 32, 1, 1]}<I_pr_diagonally_broadcast_or_fifo_effect />'I': [False, False, False, False]<used_mem_size_bit />{'W': [16, 1146880, 1146880], 'I': [512, 16384, 16384], 'O': [16, 35840, 35840], 'O_partial': [16, 0, 0], 'O_final': [0, 35840, 35840]}<actual_mem_utilization_individual />{'W': [0.03, 0.03, 0.0], 'I': [1.0, 0.0, 0.0], 'O': [0.03, 0.0, 0.0]}<actual_mem_utilization_shared />{'W': [0.03, 0.04, 0.0], 'I': [1.0, 0.04, 0.0], 'O': [0.03, 0.04, 0.0]}<effective_mem_size_bit />{'W': [8, 71680, 1146880], 'I': [512, 16384, 16384], 'O': [16, 1792, 35840], 'O_partial': [16, 0, 0], 'O_final': [0, 1792, 35840]}<total_unit_count />{'W': [896, 224, 1, 1], 'I': [896, 32, 1, 1], 'O': [896, 112, 1, 1]}<unique_unit_count />{'W': [224, 224, 1, 1], 'I': [32, 32, 1, 1], 'O': [112, 112, 1, 1]}<duplicate_unit_count />{'W': [4.0, 1.0, 1.0, 1.0], 'I': [28.0, 1.0, 1.0, 1.0], 'O': [8.0, 1.0, 1.0, 1.0]}<mem_access_count_elem><W />[[139776, 139776], [139776, 139776], [139776, 0]]<I />[[20480, 1024], [1024, 1024], [1024, 0]]<O />[[(67704, 69888), (2184, 0)], [(0, 2184), (2184, 0)], [(0, 2184), (0, 0)]]<O_partial />[[(67704, 69888), (0, 0)], [(0, 0), (0, 0)], [(0, 0), (0, 0)]]<O_final />[[(0, 0), (2184, 0)], [(0, 2184), (2184, 0)], [(0, 2184), (0, 0)]]</mem_access_count_elem><mem_access_count_word><W />[[17472, 17472], [2184, 2184], [546, 0]]<I />[[2560, 128], [16, 16], [4, 0]]<O />[[(8463, 8736), (273, 0)], [(0, 34), (34, 0)], [(0, 9), (0, 0)]]<O_partial />[([8463, 8736], [0, 0]), ([0, 0], [0, 0]), ([0, 0], [0, 0])]<O_final />[([0, 0], [273, 0]), ([0, 34], [34, 0]), ([0, 9], [0, 0])]</mem_access_count_word><mac_count><active />559104<idle />79872</mac_count></basic_info><energy><total_energy />1227400.9<mem_energy_breakdown><W />[12.2, 432.8, 727.2]<I />[0.9, 3.2, 5.3]<O />[6.1, 6.8, 11.4]</mem_energy_breakdown><MAC_energy><active_MAC />1222201.3<idle_MAC />3993.6<total />1226194.9000000001</MAC_energy></energy><performance><mac_array_utilization><utilization_with_data_loading />0.248<utilization_without_data_loading />0.5007<utilization_spatial />0.875<utilization_temporal_with_data_loading />0.2834<mac_utilize_temporal_without_data_loading />0.5722</mac_array_utilization><latency><latency_cycle_with_data_loading />4516<latency_cycle_without_data_loading />2237<ideal_computing_cycle />1280<data_loading><load_cycle_total />2279<load_cycle_individual />{'W': [7, 2240, 0], 'I': [32, 32, 0]}<load_cycle_combined />{'W': 2240, 'I': 33}</data_loading><mem_stalling><mem_stall_cycle_total />957<mem_stall_cycle_individual />{'W': [[-1279], [-1276, 957], [-1280, -1280]], 'I': [[-1279], [-64, -1280], [-1280, -1280]], 'O': [[-1280], [-1280, -1200], [-1210, -1262]]}<mem_stall_cycle_shared />{'W': [[-1279], [-1276, 957], [0, 0]], 'I': [[-1279], [-64, 957], [0, 0]], 'O': [[-1280], [-1280, -1200], [-1210, -1262]]}<latency_deep_analysis><data_size_each_level_unrolled />{'W': [16, 1146880, 1146880], 'I': [512, 16384, 16384], 'O': [16, 35840, 35840], 'O_partial': [16, 0, 0], 'O_final': [0, 35840, 35840]}<data_size_each_level_total />{'W': [3584, 1146880, 1146880], 'I': [16384, 16384, 16384], 'O': [1792, 35840, 35840]}<loop_cycles_each_level />{'W': [4, 1280, 1280], 'I': [1280, 1280, 1280], 'O': [64, 1280, 1280]}<top_ir_loop_size />{'W': [1, 1, 1], 'I': [20, 1, 1], 'O': [32, 1, 1]}<req_aver_mem_bw />{'W': [[8.0, 4.0], [896.0, 896.0], [896.0, 896.0]], 'I': [[8.0, 0.4], [12.8, 12.8], [12.8, 12.8]], 'O': [[8.0, 0.2], [28.0, 28.0], [28.0, 28.0]]}<req_inst_mem_bw />{'W': [[8.0, 4.0], [896.0, 896.0], [896.0, 896.0]], 'I': [[8.0, 8.0], [256.0, 12.8], [12.8, 12.8]], 'O': [[8.0, 8.0], [896.0, 28.0], [28.0, 28.0]]}<req_mem_bw_bit_per_cycle_individual />{'W': [[8.0, 4.0], [896.0, 896.0], [896.0, 0]], 'I': [[8.0, 8.0], [256.0, 12.8], [12.8, 0]], 'O': [[8.0, 0.2], [28.0, 28.0], [28.0, 0]]}<req_mem_bw_bit_per_cycle_shared />{'W': [[8.0, 4.0], [1180.0, 936.8], [908.8, 28.0]], 'I': [[8.0, 8.0], [1180.0, 936.8], [908.8, 28.0]], 'O': [[8.0, 0.2], [1180.0, 936.8], [908.8, 28.0]]}<output_distinguish />[('psum', 'fsum'), ('fsum', 'fsum'), ('fsum', 'fsum')]<mem_bw_requirement_meet />{'W': [[True, True], [False, False], [True, True]], 'I': [[True, True], [False, False], [True, True]], 'O': [[True, True], [False, False], [True, True]]}<trans_time_ideal />{'W': [[1, 1, 1280], [4, 4, 320], [1280, 1280, 1]], 'I': [[1, 1, 1280], [64, 1280, 1], [1280, 1280, 1]], 'O': [[1, 1, 1280], [64, 64, 20], [1280, 1280, 1]]}<trans_time_real />{'W': [[0, 1, 1280], [[0, 4, 320], [7, 4, 320]], [[2240, 1280, 1], [560, 1280, 1]]], 'I': [[0, 1, 1280], [[8, 1280, 1], [32, 1280, 1]], [[32, 1280, 1], [8, 1280, 1]]], 'O': [[0, 1, 1280], [[0, 64, 20], [4, 64, 20]], [[70, 1280, 1], [18, 1280, 1]]]}<single_stall_cycle />{'W': [[-1], [-4, 3], [960, -720]], 'I': [[-1], [-56, -32], [-1248, -1272]], 'O': [[-1], [-64, -60], [-1210, -1262]]}<single_stall_count />{'W': [1279, 319, 0], 'I': [1279, 0, 0], 'O': [1280, 20, 1]}<mem_compute_overlap_cc_for_shared_mem />{0: {'W': [1276, 0], 'I': [0, 0], 'O': [80, 70]}, 1: {'W': [0, 0], 'I': [0, 0], 'O': [70, 0]}}<mem_compute_overlap_stall_for_shared_mem_LH />{0: [[-4, -1280], [-1200, -1210]], 1: [[-1280, -1280], [-1210, -1280]]}</latency_deep_analysis></mem_stalling></latency></performance><area><total_area />120.6<mem_area />120.6<mem_area_percentage />100.0 %</area></results><elapsed_time_second />0</simulation></root>